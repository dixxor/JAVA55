package com.product;

import com.customer.Customer;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.RequestDispatcher;

import com.product.PaymentServices;
import com.paypal.api.payments.*;
import com.paypal.base.rest.PayPalRESTException;

@WebServlet("/ExecutePaymentServlet")
public class ExecutePaymentServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		boolean isTrue = false;
		String paymentId = request.getParameter("paymentId");
        String payerId = request.getParameter("PayerID");
                
        HttpSession sess = request.getSession(false);
        String name = (String) sess.getAttribute("name");
        String address = (String) sess.getAttribute("address");
        String phone = (String) sess.getAttribute("phone");
        String total = (String) sess.getAttribute("total");
        Double convTotal = Double.parseDouble(total);
        System.out.println("name:"+name+"address"+address+"phone"+phone+"total"+total);
         
        String fromEmail = "greensupermarket386@gmail.com";
		String password = "oesp uebx kctk xnze";
		String toEmail = "greensupermarket386@gmail.com";
		
		Properties props = new Properties();
		props.put("mail.smtp.host", "smtp.gmail.com");
		props.put("mail.smtp.port", "587");
		props.put("mail.smtp.auth", "true");
		props.put("mail.smtp.starttls.enable", "true");	
		
		Session session = Session.getInstance(props, new Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(fromEmail, password);
			}
		});
		
		int orderId = ProductDBUtil.getorderId();
		int incrementedId = orderId + 1;
		System.out.println(orderId+ "& inc:"+ incrementedId);
        
        try {
            PaymentServices paymentServices = new PaymentServices();
            Payment payment = paymentServices.executePayment(paymentId, payerId);
             
            PayerInfo payerInfo = payment.getPayer().getPayerInfo();
            Transaction transaction = payment.getTransactions().get(0);
            
            request.setAttribute("payer", payerInfo);
            request.setAttribute("transaction", transaction);  
            
            ArrayList<Cart> cart_list = (ArrayList<Cart>) request.getSession().getAttribute("cart-list");
    		Customer authenticate = (Customer) request.getSession().getAttribute("authenticate");
    		if(authenticate != null) {
    			 toEmail = authenticate.getEmail();
    		}
    		System.out.println("cart list" + cart_list);
    		System.out.println("authenticate" + authenticate);
			
    		if(cart_list != null && authenticate != null) {			
				for(Cart c:cart_list) {
					Order order = new Order();
					order.setId(c.getId());
					order.setCustomerId(authenticate.getId());
					order.setOrderQty(c.getQuantity()); 
					
					 isTrue = ProductDBUtil.addOrder(order, incrementedId);
					if(!isTrue) {
						break;
					}
				}
				cart_list.clear();
				ProductDBUtil.updateorderId(incrementedId, orderId);
				boolean shipping = ProductDBUtil.shippingDetails(incrementedId, authenticate.getId(), name, phone, address, convTotal);
				Message message = new MimeMessage(session);
				 message.setFrom(new InternetAddress(fromEmail));
				 message.addRecipient(javax.mail.Message.RecipientType.TO, new InternetAddress(toEmail));
				 message.setSubject("Order successfully");
				 message.setText("Your Total bill value Rs" + total+ "\n\nDear " + name+ " This email is generated by an automated system and is for informational purposes only. Please be advised that replies to this email will not be monitored or attended to. If you have any inquiries or require assistance, kindly visit our website GreenSupermarket.com or contact our customer support at greensupermarket386@gmail.com. Thankyou" );
				 
				 
				 

				 Transport.send(message);
			
			}else {
				if(authenticate != null) {
					response.sendRedirect("login.jsp");
				}
				
			}
 
            request.getRequestDispatcher("receipt.jsp").forward(request, response);
             
        } catch (PayPalRESTException | MessagingException ex) {
            request.setAttribute("errorMessage", ex.getMessage());
            ex.printStackTrace();
            request.getRequestDispatcher("error.jsp").forward(request, response);
        }
	}

}
